@page "/"
@using ProConsulta.Models.Dtos.ViewModel
@using ProConsulta.Repositories.Interfaces
@using System.Globalization
@inject IAgendamentoRepository AgendamentoRepository
<PageTitle>DASHBOARD</PageTitle>

<MudText Typo="Typo.h3" Align="Align.Center">DASHBOARD</MudText>

<div>
    <MudPaper Class="d-flex justify-center pa-4">
        <MudChart ChartType="ChartType.Bar" ChartSeries="@Series" XAxisLabels="@XaxisLabel"
        ChartOptions="@Options"
        Width="100%"
        Height="350px;"/>
     </MudPaper>
</div>


<div>
    <MudPaper Class="d-flex justify-center pa-4">
          <MudChart ChartType="ChartType.Pie" InputData="@Data" InputLabels="@Labels"
        ChartOptions="@Options"
        Width="300px"
        Height="300px;"/>
    </MudPaper>
</div>

@code{
    private ChartOptions Options = new ChartOptions
    {
        LineStrokeWidth = 20,
        YAxisTicks = 1
    };

    private String[] XaxisLabel { get; set; } = [];
    private List<ChartSeries> Series { get; set; } = new List<ChartSeries>();

    private double[] Data { get; set; } = [];
    private string[] Labels { get; set; } = [];



    protected override async Task OnInitializedAsync()
    {
        var result = await AgendamentoRepository.GetReportAsync();

        if(result is null || !result.Any())
            return;

            montaGraficoBarra(result);
            montaGraficoPizza(result);

    }

    private void montaGraficoBarra(List<AgendamentosAnuais> agendamentos)
    {
           XaxisLabel = agendamentos.Select(x => CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(x.Mes)).ToArray();
            
            
            var serie = new ChartSeries
            {
                Name = "Atendimentos Mensais",
                Data = agendamentos.Select(x => (double)x.QuantidadeAgendamentos).ToArray()
            };

            Series.Add(serie);
    }

    private void montaGraficoPizza(List<AgendamentosAnuais> agendamentos)
    {
           Labels = agendamentos.Select(x => CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(x.Mes)).ToArray();
           Data = agendamentos.Select(x => (double)x.QuantidadeAgendamentos).ToArray();
            
    }
}